service: serverless-rimac
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  profile: reto-rimac
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - arn:aws:dynamodb:us-east-1:058154850901:table/Empleado

resources:
  Resources:    
    Empleado:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Empleado
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

functions:
  filmsSwapi:
    handler: src/integration/getFilms.getFilmsLambda
    events:
      - http:
          method: get
          path: /peliculas/{id}
  peopleSwapi:
    handler: src/integration/getPeople.getPeopleLambda
    events:
      - http:
          method: get
          path: /personas/{id}
  planetsSwapi:
    handler: src/integration/getPlanets.getPlanetsLambda
    events:
      - http:
          method: get
          path: /planetas/{id}      
  speciesSwapi:
    handler: src/integration/getSpecies.getSpeciesLambda
    events:
      - http:
          method: get
          path: /especies/{id}            
  starshipsSwapi:
    handler: src/integration/getStarships.getStarshipsLambda
    events:
      - http:
          method: get
          path: /naves/{id}
  vehiclesSwapi:
    handler: src/integration/getVehicles.getVehiclesLambda
    events:
      - http:
          method: get
          path: /vehiculos/{id}
  crearEmpleado:
    handler: src/models/empleado/crear.crearEmpleadoLambda
    events:
      - http:
          method: post
          path: /empleados
  listarEmpleado:
    handler: src/models/empleado/listar.listarEmpleadoLambda
    events:
      - http:
          method: get
          path: /empleados
  buscarEmpleado:
    handler: src/models/empleado/buscar.buscarEmpleadoLambda
    events:
      - http:
          method: get
          path: /empleados/{id}
  editarEmpleado:
    handler: src/models/empleado/editar.editarEmpleadoLambda
    events:
      - http:
          method: put
          path: /empleados/{id}
  eliminarEmpleado:
    handler: src/models/empleado/eliminar.eliminarEmpleadoLambda
    events:
      - http:
          method: delete
          path: /empleados/{id}          